"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var expression_1 = require("./../../expression");
exports.TaggedTemplateExpressionBase = expression_1.MemberExpression;
var TaggedTemplateExpression = /** @class */ (function (_super) {
    __extends(TaggedTemplateExpression, _super);
    function TaggedTemplateExpression() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Gets the tag.
     */
    TaggedTemplateExpression.prototype.getTag = function () {
        return this.getNodeFromCompilerNode(this.compilerNode.tag);
    };
    /**
     * Gets the template literal.
     */
    TaggedTemplateExpression.prototype.getTemplate = function () {
        return this.getNodeFromCompilerNode(this.compilerNode.template);
    };
    return TaggedTemplateExpression;
}(exports.TaggedTemplateExpressionBase));
exports.TaggedTemplateExpression = TaggedTemplateExpression;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ts = require("typescript");
/* istanbul ignore next */
function propertyNameAliasValidation() {
    var value = null;
    switch (value.kind) {
        case ts.SyntaxKind.Identifier:
        case ts.SyntaxKind.StringLiteral:
        case ts.SyntaxKind.NumericLiteral:
        case ts.SyntaxKind.ComputedPropertyName:
            return;
        default:
            var ensureNever = value;
    }
}
/* istanbul ignore next */
function accessorDeclarationAliasValidation() {
    var value = null;
    switch (value.kind) {
        case ts.SyntaxKind.SetAccessor:
        case ts.SyntaxKind.GetAccessor:
            return;
        default:
            var ensureNever = value;
    }
}
/* istanbul ignore next */
function entityNameValidation() {
    var value = null;
    switch (value.kind) {
        case ts.SyntaxKind.Identifier:
        case ts.SyntaxKind.QualifiedName:
            return;
        default:
            var ensureNever = value;
    }
}
/* istanbul ignore next */
function objectLiteralElementLikeAliasValidation() {
    var value = null;
    switch (value.kind) {
        case ts.SyntaxKind.PropertyAssignment:
        case ts.SyntaxKind.ShorthandPropertyAssignment:
        case ts.SyntaxKind.SpreadAssignment:
        case ts.SyntaxKind.MethodDeclaration:
        case ts.SyntaxKind.SetAccessor:
        case ts.SyntaxKind.GetAccessor:
            return;
        default:
            var ensureNever = value;
    }
}
/* istanbul ignore next */
function caseOrDefaultClauseValidation() {
    var value = null;
    switch (value.kind) {
        case ts.SyntaxKind.CaseClause:
        case ts.SyntaxKind.DefaultClause:
            return;
        default:
            var ensureNever = value;
    }
}
/* istanbul ignore next */
function moduleReferenceValidation() {
    var value = null;
    switch (value.kind) {
        case ts.SyntaxKind.Identifier:
        case ts.SyntaxKind.QualifiedName:
        case ts.SyntaxKind.ExternalModuleReference:
            return;
        default:
            var ensureNever = value;
    }
}

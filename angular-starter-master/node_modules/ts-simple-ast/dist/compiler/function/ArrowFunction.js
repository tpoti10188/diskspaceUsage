"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var expression_1 = require("./../expression");
var base_1 = require("./../base");
var statement_1 = require("./../statement");
exports.ArrowFunctionBase = base_1.JSDocableNode(base_1.TextInsertableNode(base_1.BodiedNode(base_1.AsyncableNode(statement_1.StatementedNode(base_1.TypeParameteredNode(base_1.SignaturedDeclaration(base_1.ModifierableNode(expression_1.Expression))))))));
var ArrowFunction = /** @class */ (function (_super) {
    __extends(ArrowFunction, _super);
    function ArrowFunction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Gets the equals greater than token of the arrow function.
     */
    ArrowFunction.prototype.getEqualsGreaterThan = function () {
        return this.getNodeFromCompilerNode(this.compilerNode.equalsGreaterThanToken);
    };
    return ArrowFunction;
}(exports.ArrowFunctionBase));
exports.ArrowFunction = ArrowFunction;

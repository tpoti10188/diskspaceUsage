"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var expression_1 = require("./../expression");
var TypeNode_1 = require("./TypeNode");
exports.ExpressionWithTypeArgumentsBase = expression_1.LeftHandSideExpressionedNode(TypeNode_1.TypeNode);
var ExpressionWithTypeArguments = /** @class */ (function (_super) {
    __extends(ExpressionWithTypeArguments, _super);
    function ExpressionWithTypeArguments() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Gets the type arguments.
     */
    ExpressionWithTypeArguments.prototype.getTypeArguments = function () {
        var _this = this;
        var typeArguments = this.compilerNode.typeArguments;
        if (typeArguments == null)
            return [];
        return typeArguments.map(function (a) { return _this.getNodeFromCompilerNode(a); });
    };
    return ExpressionWithTypeArguments;
}(exports.ExpressionWithTypeArgumentsBase));
exports.ExpressionWithTypeArguments = ExpressionWithTypeArguments;

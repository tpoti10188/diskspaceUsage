"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var StructureToText_1 = require("./../StructureToText");
var ParameterDeclarationStructureToText = /** @class */ (function (_super) {
    __extends(ParameterDeclarationStructureToText, _super);
    function ParameterDeclarationStructureToText() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ParameterDeclarationStructureToText.prototype.writeText = function (structure) {
        this.writer.conditionalWrite(structure.isRestParameter, "...");
        this.writer.write(structure.name);
        this.writer.conditionalWrite(structure.type != null && structure.type.length > 0, ": " + structure.type);
    };
    ParameterDeclarationStructureToText.prototype.writeParameters = function (structures) {
        if (structures == null)
            return;
        for (var i = 0; i < structures.length; i++) {
            this.writer.conditionalWrite(i > 0, ", ");
            this.writeText(structures[i]);
        }
    };
    return ParameterDeclarationStructureToText;
}(StructureToText_1.StructureToText));
exports.ParameterDeclarationStructureToText = ParameterDeclarationStructureToText;

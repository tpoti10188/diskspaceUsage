"use strict";
var __extends = (this && this.__extends)/* istanbul ignore next */ || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var StructureToText_1 = require("./../StructureToText");
var function_1 = require("./../function");
var doc_1 = require("./../doc");
var MethodDeclarationStructureToText = /** @class */ (function (_super) {
    __extends(MethodDeclarationStructureToText, _super);
    function MethodDeclarationStructureToText(writer, opts) {
        var _this = _super.call(this, writer) || this;
        _this.opts = opts;
        _this.jsDocWriter = new doc_1.JSDocStructureToText(_this.writer);
        _this.parameterWriter = new function_1.ParameterDeclarationStructureToText(_this.writer);
        return _this;
    }
    MethodDeclarationStructureToText.prototype.writeText = function (structure) {
        this.jsDocWriter.writeDocs(structure.docs);
        this.writer.conditionalWrite(structure.isStatic, "static ");
        this.writer.write(structure.name + "(");
        this.parameterWriter.writeParameters(structure.parameters);
        this.writer.write(")");
        this.writer.conditionalWrite(structure.returnType != null && structure.returnType.length > 0, ": " + structure.returnType);
        if (this.opts.isAmbient)
            this.writer.write(";");
        else
            this.writer.block();
    };
    return MethodDeclarationStructureToText;
}(StructureToText_1.StructureToText));
exports.MethodDeclarationStructureToText = MethodDeclarationStructureToText;
